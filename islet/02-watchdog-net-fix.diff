project libcore/
diff --git a/libcore/libart/src/main/java/java/lang/Daemons.java b/libcore/libart/src/main/java/java/lang/Daemons.java
index 5b2adb366c7..53ad07a4c7d 100644
--- a/libcore/libart/src/main/java/java/lang/Daemons.java
+++ b/libcore/libart/src/main/java/java/lang/Daemons.java
@@ -54,7 +54,7 @@ public final class Daemons {
             HeapTaskDaemon.INSTANCE,
             ReferenceQueueDaemon.INSTANCE,
             FinalizerDaemon.INSTANCE,
-            FinalizerWatchdogDaemon.INSTANCE,
+            // FinalizerWatchdogDaemon.INSTANCE,
     };
     private static final CountDownLatch POST_ZYGOTE_START_LATCH = new CountDownLatch(DAEMONS.length);
     private static final CountDownLatch PRE_ZYGOTE_START_LATCH = new CountDownLatch(DAEMONS.length);

project system/netd/
diff --git a/system/netd/server/TetherController.cpp b/system/netd/server/TetherController.cpp
index 79193574..49d7b8c3 100644
--- a/system/netd/server/TetherController.cpp
+++ b/system/netd/server/TetherController.cpp
@@ -67,7 +67,7 @@ using android::base::StringPrintf;
 using android::base::unique_fd;
 using android::netdutils::DumpWriter;
 using android::netdutils::ScopedIndent;
-using android::netdutils::statusFromErrno;
+//using android::netdutils::statusFromErrno;
 using android::netdutils::StatusOr;
 
 namespace {
@@ -724,8 +724,8 @@ int TetherController::setForwardRules(bool add, const char *intIface, const char
 
     std::vector<std::string> v4 = {
             "*raw",
-            StringPrintf("%s %s -p tcp --dport 21 -i %s -j CT --helper ftp", op,
-                         LOCAL_RAW_PREROUTING, intIface),
+            // StringPrintf("%s %s -p tcp --dport 21 -i %s -j CT --helper ftp", op,
+            //              LOCAL_RAW_PREROUTING, intIface),
             StringPrintf("%s %s -p tcp --dport 1723 -i %s -j CT --helper pptp", op,
                          LOCAL_RAW_PREROUTING, intIface),
             "COMMIT",
@@ -912,14 +912,21 @@ StatusOr<TetherController::TetherStatsList> TetherController::getTetherStats() {
     for (const IptablesTarget target : {V4, V6}) {
         std::string statsString;
         if (int ret = iptablesRestoreFunction(target, GET_TETHER_STATS_COMMAND, &statsString)) {
-            return statusFromErrno(-ret, StringPrintf("failed to fetch tether stats (%d): %d",
-                                                      target, ret));
+            gLog.log("[ISLET] %s \n", StringPrintf("failed to fetch tether stats (%d): %d",
+                                                    target, ret).c_str());
+
+            // return statusFromErrno(-ret, StringPrintf("failed to fetch tether stats (%d): %d",
+            //                                          target, ret));
         }
 
         if (int ret = addForwardChainStats(statsList, statsString, parsedIptablesOutput)) {
-            return statusFromErrno(-ret, StringPrintf("failed to parse %s tether stats:\n%s",
-                                                      target == V4 ? "IPv4": "IPv6",
-                                                      parsedIptablesOutput.c_str()));
+            gLog.log("[ISLET] %s\n", StringPrintf("failed to parse %s tether stats:\n%s",
+                                                    target == V4 ? "IPv4": "IPv6",
+                                                    parsedIptablesOutput.c_str()).c_str());
+
+            // return statusFromErrno(-ret, StringPrintf("failed to parse %s tether stats:\n%s",
+            //                                          target == V4 ? "IPv4": "IPv6",
+            //                                          parsedIptablesOutput.c_str()));
         }
     }
 
