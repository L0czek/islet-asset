
project system/netd/
diff --git a/server/TetherController.cpp b/server/TetherController.cpp
index 79193574..7c9d8a25 100644
--- a/server/TetherController.cpp
+++ b/server/TetherController.cpp
@@ -67,7 +67,7 @@ using android::base::StringPrintf;
 using android::base::unique_fd;
 using android::netdutils::DumpWriter;
 using android::netdutils::ScopedIndent;
-using android::netdutils::statusFromErrno;
+// using android::netdutils::statusFromErrno;
 using android::netdutils::StatusOr;
 
 namespace {
@@ -912,14 +912,19 @@ StatusOr<TetherController::TetherStatsList> TetherController::getTetherStats() {
     for (const IptablesTarget target : {V4, V6}) {
         std::string statsString;
         if (int ret = iptablesRestoreFunction(target, GET_TETHER_STATS_COMMAND, &statsString)) {
-            return statusFromErrno(-ret, StringPrintf("failed to fetch tether stats (%d): %d",
-                                                      target, ret));
+            gLog.log("[ISLET] %s \n", StringPrintf("failed to fetch tether stats (%d): %d",
+                                                      target, ret).c_str());
+            // return statusFromErrno(-ret, StringPrintf("failed to fetch tether stats (%d): %d",
+            //                                           target, ret));
         }
 
         if (int ret = addForwardChainStats(statsList, statsString, parsedIptablesOutput)) {
-            return statusFromErrno(-ret, StringPrintf("failed to parse %s tether stats:\n%s",
+            gLog.log("[ISLET] %s\n", StringPrintf("failed to parse %s tether stats:\n%s",
                                                       target == V4 ? "IPv4": "IPv6",
-                                                      parsedIptablesOutput.c_str()));
+                                                      parsedIptablesOutput.c_str()).c_str());
+            // return statusFromErrno(-ret, StringPrintf("failed to parse %s tether stats:\n%s",
+            //                                           target == V4 ? "IPv4": "IPv6",
+            //                                           parsedIptablesOutput.c_str()));
         }
     }
